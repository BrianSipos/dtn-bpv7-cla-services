<?xml version="1.0" encoding="UTF-8"?>
<?rfc toc="yes"?>
<rfc xmlns:xi="http://www.w3.org/2001/XInclude" category="info" consensus="true" docName="draft-sipos-dtn-bpv7-cla-services-00" ipr="trust200902" submissionType="IETF" tocDepth="2" tocInclude="true" version="3">
  <front>
    <title abbrev="BPv7 CLA Services">
Bundle Protocol Expected Convergence Layer Adapter Services
    </title>
    <seriesInfo name="Internet-Draft" value="draft-sipos-dtn-bpv7-cla-services-00"/>
    <author fullname="Brian Sipos" initials="B." surname="Sipos">
      <organization abbrev="JHU/APL">The Johns Hopkins University Applied Physics Laboratory</organization>
      <address>
        <postal>
          <street>11100 Johns Hopkins Rd.</street>
          <city>Laurel</city>
          <region>MD</region>
          <code>20723</code>
          <country>United States of America</country>
        </postal>
        <email>brian.sipos+ietf@gmail.com</email>
      </address>
    </author>
    <date/>
    <area>Transport</area>
    <workgroup>Delay-Tolerant Networking</workgroup>
    <keyword>DTN</keyword>
    <abstract>
      <t>
This document attempts to harmonize the services expected of a Convergence Layer Adapter (CLA) by an overlaying Bundle Protocol Agent (BPA).
This harmonization is based on combining the various existing CLA behaviors into a set of minimum expected service interfaces.
      </t>
    </abstract>
  </front>
  <middle>
    <section anchor="sec-intro">
      <name>Introduction</name>
      <t>
Before this document, each convergence layer (CL) definition included (or implied) its own set of specific services and primitives that would be supported by an associated convergence layer adapter (CLA).
From the perspective of capabilities and behaviors of an individual CLA this is sensible, but from the perspective of the Bundle Protocol Agent (BPA) this lack of consistency in both capability and naming makes the logical interface between BPA and its CLAs difficult to manage and in many cases implementation dependent (both in capability and in terminology).
      </t>
      <t>
The task of this document is thus to harmonize the CLA interface into a set of distinct and consistently named services, each composed of primitives inspired by the ISO naming convention of "request" meaning a service user intending to invoke an activity on the service provider and "indication" meaning the service provider giving status of an activity to a service user.
      </t>
      <t>
Because the wide variety of transport mechanisms used across the various CLs and their differing aspects (see <xref target="sec-aspects"/>) many of the requests or indications do not apply and are not used or usable by any particular CLA (see <xref target="sec-applicability"/> for some examples).
      </t>
      <section>
        <name>Scope</name>
        <t>
This document is based on existing CLs which transport over UDP <xref target="RFC7122"/> <xref target="CCSDS-BP"/>, TCP <xref target="RFC9174"/>, LTP/UDP <xref target="RFC5326"/> <xref target="RFC7122"/>, and BIBE <xref target="I-D.ietf-dtn-bibect"/>.
        </t>
        <t>
This document does not specify any additional services needed of existing CL specifications.
In cases where existing CLs deviate from these service definitions it represents a possible future enhancement to the CL to harmonize it with these idealized services.
        </t>
      </section>
      <section anchor="sec-terminology">
        <name>Terminology</name>
        <t>
The key words "MUST", "MUST NOT", "REQUIRED", "SHALL", "SHALL NOT", "SHOULD", "SHOULD NOT", "RECOMMENDED", "NOT RECOMMENDED", "MAY", and "OPTIONAL" in this document are to be interpreted as described in BCP 14 <xref target="RFC2119"/> <xref target="RFC8174"/> when, and only when, they appear in all capitals, as shown here.
        </t>
        <t>
The following are definitions necessary to understand the services and functions in this document.
        </t>
        <dl>
          <dt>Bundle Protocol:</dt>
          <dd>The definition of the data contained in bundles and the encoding of that data.</dd>
          <dt>Bundle Protocol Agent:</dt>
          <dd>The entity which performs the functions of the bundle protocol.</dd>
          <dt>Convergence Layer:</dt>
          <dd>The definition of how an encoded bundle can be transferred over a particular underlying transport.</dd>
          <dt>Convergence Layer Adapter:</dt>
          <dd>The entity which performs the functions of a specific convergence layer.</dd>
          <dt>Transfer:</dt>
          <dd>The activity of one CLA transmitting and some number of CLAs receiving a bundle.</dd>
          <dt>Transmission:</dt>
          <dd>A transfer from the perspective of the transmitting CLA.</dd>
          <dt>Transmission ID:</dt>
          <dd>A unique identifier for a specific <xref format="title" target="sec-srv-bundle-tx"/> service instance.</dd>
          <dt>Reception:</dt>
          <dd>A transfer from the perspective of the receiving CLA.</dd>
          <dt>Reception ID:</dt>
          <dd>A unique identifier for a specific <xref format="title" target="sec-srv-bundle-rx"/> service instance.</dd>
          <dt>Session:</dt>
          <dd>A persistent connection of a transport along with additional CLA state related to that connection.</dd>
          <dt>Session ID:</dt>
          <dd>A unique identifier for a specific <xref format="title" target="sec-srv-session"/> service instance.</dd>
        </dl>
      </section>
    </section>
    <section anchor="sec-aspects">
      <name>Convergence Layer Aspects</name>
      <t>
This section attempts to categorize existing CLs by a few different critical aspects of their behavior.
This expands on the general terminology of <xref target="sec-terminology"/> with definitions specific to those aspects.
      </t>
      <t>
There is currently no concept of a "streaming" CL.
All CLAs must operate with bundles as their service data unit (SDU) so must behave as a datagram service to the BPA.
In the case where the underlying transport is an octet stream (<em>e.g.</em>, the TCPCL using TCP) the CL itself must encapsulate the encoded bundles into the transport stream.
      </t>
      <dl>
        <dt>Reliable or Unreliable</dt>
        <dd>
          <t>
The reliability of a CL is determined by whether or not the CLA transmitting a bundle has a positive indication of the reception of the bundle above the transport itself.
For example, it is not enough for TCP to acknowledge that the TCP/IP stack has received the segment; the CLA MUST have feedback from the receiving BPA that the bundle has progressed all the way "into the receiving node."
          </t>
        </dd>
        <dt>Atomic or Segmented</dt>
        <dd>
          <t>
Although the reliability of a CL is at the level of the entire bundle, some CLs also provide segmentation of the bundle data in order to provide additional capabilities such as selective retransmission, intermediate progress, or interleaving of transfers on the same stream.
In the absence of segmentation a CL performs its transfers atomically; either all or nothing.
          </t>
        </dd>
        <dt>Connection-oriented or Connectionless</dt>
        <dd>
          <t>
Some CLs operate over transports that require establishment of connections before transfers can be made, while other CLs operate on connectionless transports which can transfer datagrams unsolicited.
In some cases a security association can necessitate a connection-like shared state between peers.
Even for connectionless transports there can be recommendations about "conversation" state keeping to allow the transport to operate consistently through middleboxes.
          </t>
        </dd>
        <dt>Unicast or Multicast</dt>
        <dd>
At the network level, some CLs can only operate properly with a unicast next-hop destination.
For many reliable transports, this is a natural limitation of the protocol.
Other transports can operate with multicast (or broadcast) destinations either because they are not reliable (<em>e.g.</em>, UDP or LTP green-part) or because they use a multicast-aware retransmission scheme (<em>e.g.</em>, NORM <xref target="RFC5740"/>).
        </dd>
        <dt>Size Limitations</dt>
        <dd>
          <t>
The BPv7 specification <xref target="RFC9171"/> does not impose an upper-bound on either the size of the payload data or the size of the overall encoded bundle.
Despite this, some CLs have a natural upper bound on the size of bundle which can be transferred.
In other cases, a profile of the CL can reduce the effective upper bound of bundle size.
          </t>
          <t>
While the LTPCL and TCPCL technically allow a 64-bit transfer size, the UDPCL by its nature is limited to 64KiB on IPv4 and only in certain circumstances can be enlarged on IPv6 jumbograms <xref section="4" target="RFC2675"/>.
Large datagram sizes however will run into path MTU and fragmentation issues <xref target="RFC8900"/>.
          </t>
        </dd>
      </dl>
    </section>
    <section anchor="sec-cla-services">
      <name>Convergence Layer Adapter Services</name>
      <t>
Each of the following subsections defines an independent service provided by a CLA to a BPA.
Depending on the mechanics of the specific CLA, not all of the requests or indications listed here will be meaningful or used.
      </t>
      <section anchor="sec-srv-bundle-tx">
        <name>Bundle Transmission</name>
        <t>
The principal purpose of any CLA is to allow a BPA to transmit bundle data to a peer node's BPA.
Because of this, all CLAs <bcp14>SHALL</bcp14> support the Bundle Transmission service.
        </t>
        <t>
Each transmission is a time-bounded activity to transfer a bundle from the local CLA to a peer CLA.
Transmissions are always initiated by the local BPA, and it is out of scope of this document to determine when a bundle is ready for transmission over a particular CLA to a particular peer.
        </t>
        <t>
Each transmission is identified by a CLA-defined transmission ID which is unique within the context of a single BPA--CLA association.
The bundle identity is not a sufficient transmission ID because a CLA can request duplicated transmissions (across time or simultaneously) of the same bundle from the same CLA.
        </t>
        <figure>
          <name>Activity flow for Bundle Transmission</name>
          <artwork align="center" type="ascii-art">
   +---------------+              error
   |     Begin     +------------+ before
   |  Transmission |            v start
   |    Request    |    +---------------+
   +-------+-------+    |  Transmission |
           |            |    Failure    |
           v            |   Indication  |
   +---------------+    +---------------+
   |  Transmission |            ^
+--+    Started    |            | error
|  |   Indication  +------------+ after
|  +-------+-------+            | start
|          |                    |
|          v                    |
|  +---------------+            |
|  |  Transmission |            |
|  |    Progress   +------------+
|  |   Indication  |            |
|  +-------+-------+    +-------+-------+
|          |            |   Interrupt   |
|          v            |&gt; Transmission |
|  +---------------+    |    Request    |
|  |  Transmission |    +---------------+
+->|    Success    |
   |   Indication  |
   +---------------+
          </artwork>
        </figure>
        <t>
The primitives associated with this service are in the following subsections.
        </t>
        <section anchor="sec-srv-bundle-tx-begin">
          <name>Begin Transmission</name>
          <t>
The BPA requests transfer of an individual encoded bundle with parameters indicating to what CLA peer the transmission is destined.
Any queueing of transmissions is the obligation of the BPA, as soon as the request is made to the CLA the transmission <bcp14>MAY</bcp14> begin.
          </t>
          <t>
Each transmission <bcp14>SHALL</bcp14> include an absolute time deadline based on at least the bundle lifetime.
The BPA <bcp14>MAY</bcp14> expand or reduce the deadline based on other factors including: the bundle size, the expected or estimated network throughput and loss rate, the expected or estimated one-way light time (OWLT) to and from the peer.
          </t>
          <t>
Parameters to this request include:
          </t>
          <dl>
            <dt>Bundle data:</dt>
            <dd>The bundle encoded as an octet string to be transmitted.</dd>
            <dt>Peer transport parameters:</dt>
            <dd>Network and transport parameters necessary to either identify an existing peer connection (if applicable) or begin transport of the bundle.</dd>
            <dt>Transfer deadline:</dt>
            <dd>The amount of time, from the request, for which is acceptable for the CLA to operate before either Success or Failure.</dd>
            <dt>Security Needs:</dt>
            <dd>
              <t>
Along with the bundle data itself, the BPA provides requirements about the transport security such as: the required identity of the peer, requirement for authentication, if the transport must be confidential or integrity-checked, <em>etc.</em>
              </t>
              <t>
Many of the needs are optional rather than purely boolean in that some aspects of security can be labeled as "don't care" to allow opportunistic security <xref target="RFC7435"/>.
              </t>
            </dd>
          </dl>
          <t>
The result of this request <bcp14>SHALL</bcp14> be a unique transmission ID used to correlate later interactions with the request.
          </t>
          <t>
Following this request exactly one of the following <bcp14>SHALL</bcp14> be indicated: <xref format="title" target="sec-srv-bundle-tx-started"/>, if the transmission is in fact started, or <xref format="title" target="sec-srv-bundle-tx-failure"/> if the CLA cannot accommodate the request for whatever reason.
          </t>
        </section>
        <section anchor="sec-srv-bundle-tx-started">
          <name>Transmission Started</name>
          <t>
Even for unreliable transports, the CLA indicates to the BPA when the transmission is actually started.
Because of contention for resources (<em>e.g.</em>, socket writes or rate-limiting tokens) the actual start of transmission can be delayed from the request to begin transmission.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Transmission ID:</dt>
            <dd>The correlator for the bundle transmission.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-tx-progress">
          <name>Transmission Progress</name>
          <t>
Not all CLAs will support the notion of a segmented transfer.
For those that do, this indication provides information to the BPA about how far along a transmission has progressed since the start.
If a transmission is completed in a single unit, either the whole data atomically or as a single segment, this indication <bcp14>SHALL NOT</bcp14> be provided.
The size in this indication <bcp14>SHALL</bcp14> be relative to the bundle data being transmitted and not include any segmentation or transport overhead.
When the CLA is reliable, this indication <bcp14>SHALL</bcp14> include only peer acknowledged progress.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Transmission ID:</dt>
            <dd>The correlator for the bundle transmission.</dd>
            <dt>Current size:</dt>
            <dd>The accumulated data size sent so far.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-tx-success">
          <name>Transmission Success</name>
          <t>
This indication concludes a transmission and informs the BPA that it was a success.
An unreliable CL will always indicate success upon completion.
When the CLA is reliable, this indication <bcp14>SHALL</bcp14> include only peer acknowledged progress.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Transmission ID:</dt>
            <dd>The correlator for the bundle transmission.</dd>
            <dt>Security Metadata:</dt>
            <dd>Along with the bundle data itself, the CLA provides metadata about the transport security such as: the identity of the peer, whether or not it was authenticated, if the transport is confidential or integrity-checked, <em>etc.</em></dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-tx-failure">
          <name>Transmission Failure</name>
          <t>
This indication concludes a transmission and informs the BPA that a failure occurred.
The reason for the failure is CL-dependent and <bcp14>MAY</bcp14> be absent if a CL has non-specific failures.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Transmission ID:</dt>
            <dd>The correlator for the bundle transmission.</dd>
            <dt>Reason:</dt>
            <dd>An optional reason for why the transmission failed.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-tx-interrupt">
          <name>Interrupt Transmission</name>
          <t>
This request provides a way for the BPA to cancel transmission any time after it is started and before its deadline has expired.
          </t>
          <t>
Parameters to this request include:
          </t>
          <dl>
            <dt>Transmission ID:</dt>
            <dd>The correlator for the bundle transmission.</dd>
          </dl>
          <t>
Following this request the <xref format="title" target="sec-srv-bundle-tx-failure"/> <bcp14>MAY</bcp14> be indicated if the interruption applied before the transmission finished.
          </t>
        </section>
      </section>
      <section anchor="sec-srv-bundle-rx">
        <name>Bundle Reception</name>
        <t>
A necessary part of any CLA is the ability to receive from peer nodes BPA in an asynchronous manner.
Because of this, all CLAs <bcp14>SHALL</bcp14> support the Bundle Reception service.
        </t>
        <t>
Each reception is a time-bounded activity to transfer a bundle from a peer CLA to the local CLA.
Receptions are always initiated by a peer CLA, so the start of a reception is an indication.
Before a reception can be started the local CLA needs to either be in an established session (where applicable, see <xref target="sec-srv-session"/>) or listening for datagrams (where applicable, see <xref target="sec-srv-listen"/>).
        </t>
        <t>
Each reception is identified by a CLA-defined reception ID which is unique within the context of a single BPA--CLA association.
The bundle identity is not a sufficient reception ID because a CLA can receive duplicated transmissions (across time or simultaneously) of the same bundle and also the reception ID is needed before any bundle primary block data is received.
        </t>
        <figure>
          <name>Activity flow for Bundle Reception</name>
          <artwork align="center" type="ascii-art">
   +---------------+
   |    Passive    |
   |   Listening   |    +---------------+
   +-------+-------+    |   Reception   |
           |            |    Failure    |
           v            |   Indication  |
   +---------------+    +---------------+
   |   Reception   |            ^
+--+    Started    |            |
|  |   Indication  +------------+
|  +-------+-------+            |
|          |                    |
|          v                    |
|  +---------------+            |
|  |   Reception   |            |
|  |    Progress   +------------+
|  |   Indication  |            |
|  +-------+-------+    +-------+-------+
|          |            |   Interrupt   |
|          v            |&gt;  Reception   |
|  +---------------+    |    Request    |
|  |   Reception   |    +---------------+
+->|    Success    |
   |   Indication  |
   +---------------+
          </artwork>
        </figure>
        <t>
The primitives associated with this service are in the following subsections.
        </t>
        <section anchor="sec-srv-bundle-rx-started">
          <name>Reception Started</name>
          <t>
The CLA indicates to the BPA when a reception is started.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Reception ID:</dt>
            <dd>The correlator for the bundle reception.</dd>
            <dt>Peer transport parameters:</dt>
            <dd>Network and transport parameters necessary to identify the peer sending the bundle.</dd>
            <dt>Total size:</dt>
            <dd>An optional expected size of the bundle data.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-rx-progress">
          <name>Reception Progress</name>
          <t>
Not all CLs will support the notion of a segmented transfer.
For those that do, this indication provides information to the BPA about how far along a reception has progressed since the start.
If a reception is completed in a single unit, either the whole data atomically or as a single segment, this indication <bcp14>SHALL NOT</bcp14> be provided.
The size in this indication <bcp14>SHALL</bcp14> be relative to the bundle data being transmitted and not include any segmentation or transport overhead.
When the CL is reliable, this indication <bcp14>SHALL</bcp14> include only peer acknowledged progress.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Reception ID:</dt>
            <dd>The correlator for the bundle reception.</dd>
            <dt>Current size:</dt>
            <dd>The accumulated data size received so far. This size does not necessarily need to be contiguous or at the head of the bundle data.</dd>
            <dt>Current data head:</dt>
            <dd>An optional chunk of contiguous data at the head of the total bundle data. For CLs that can receive data out-of-order this <bcp14>MAY</bcp14> be absent even when the current size is non-zero.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-rx-success">
          <name>Reception Success</name>
          <t>
This indication concludes a reception and informs the BPA that it was a success as well as providing the actual bundle data received.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Reception ID:</dt>
            <dd>The correlator for the bundle reception.</dd>
            <dt>Bundle data:</dt>
            <dd>The received bundle encoded as an octet string.</dd>
            <dt>Security Metadata:</dt>
            <dd>Along with the bundle data itself, the CLA provides metadata about the transport security such as: the identity of the peer, whether or not it was authenticated, if the transport is confidential or integrity-checked, <em>etc.</em></dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-rx-failure">
          <name>Reception Failure</name>
          <t>
This indication concludes a reception and informs the BPA that a failure occurred.
The reason for the failure is CL-dependent and <bcp14>MAY</bcp14> be absent if a CL has non-specific failures.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Reception ID:</dt>
            <dd>The correlator for the bundle reception.</dd>
            <dt>Reason:</dt>
            <dd>An optional reason for why the reception failed.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-bundle-rx-interrupt">
          <name>Interrupt Reception</name>
          <t>
This request provides a way for the BPA to refuse reception any time after it is started.
          </t>
          <t>
If a CLA indicates current data head in its Reception Progress indication, this can be used to inspect the bundle's primary block before a large payload is received and preemptively refuse the bundle to save time and network volume.
          </t>
          <t>
Parameters to this request include:
          </t>
          <dl>
            <dt>Reception ID:</dt>
            <dd>The correlator for the bundle reception.</dd>
          </dl>
          <t>
Following this request the <xref format="title" target="sec-srv-bundle-rx-failure"/> <bcp14>MAY</bcp14> be indicated if the interruption applied before the reception finished.
          </t>
        </section>
      </section>
      <section anchor="sec-srv-session">
        <name>Persistent Session Keeping</name>
        <t>
An optional service provided by connection-oriented CLs, such as the TCPCL of <xref target="RFC9174"/>, is the ability to establish a session with a peer node before any bundles need to be sent to that peer.
The distinction between a connection and session is that the connection is a service provided by the underlying transport while the session is a service of the convergence layer itself.
Additionally, sessions can include a security association between peers which can amortize much of the processing time associated with authenticating and authorizing a peer connection.
        </t>
        <t>
Sessions <bcp14>MAY</bcp14> be initiated by the local CLA or as a response to passive listening by the local CLA to peer initiations.
In either case, the Session State Changed indication is produced by the CLA as the sessions progress through to an established (or a failed or terminated) state.
        </t>
        <t>
Whether or not a CLA requires a session to perform the actual transfer of bundles does not affect the way in which the bundle-data-focused services in <xref target="sec-srv-bundle-tx"/> and <xref target="sec-srv-bundle-rx"/> operate.
A CLA which uses sessions <bcp14>SHOULD</bcp14> transparently create a sessions as needed to perform a Bundle Transmission; the Transmission Started indication would just be delayed until after the session is established and ready for use.
In the case where a session can not be established in a timely manner, the <xref format="title" target="sec-srv-bundle-tx-failure"/> indication would be used to inform the BPA that the bundle was not able to be sent.
        </t>
        <t>
In order to fit this service model, CLAs <bcp14>SHALL</bcp14> include pseudo-states which are associated with the session ending.
Doing so avoids the need for a separate "session ended" indication.
        </t>
        <figure>
          <name>Activity flow for session keeping</name>
          <artwork align="center" type="ascii-art">
+---------------+
|    Attempt    |   +---------------+
|&gt;   Session    |   |    Passive    | 
|    Request    |   |   Listening   |
+-------+-------+   +-------+-------+
        |                   |
        +---------+---------+
                  |
                  v
          +---------------+
          | Session State |
          |    Changed    |&lt;-+
          |   Indication  |  |
          +-------+-------+  |
                  |          |
                  +----------+
                             |
          +---------------+  |
          |   Terminate   |  |
          |&gt;   Session    +--+
          |    Request    |
          +---------------+
          </artwork>
        </figure>
        <t>
The primitives associated with this service are in the following subsections.
        </t>
        <section anchor="sec-srv-session-attempt">
          <name>Attempt Session</name>
          <t>
This request allows the local BPA to initiate a session with a peer.
The attempt to create a session will not necessarily result in a session eventually having an established state with the desired peer.
Configuration of the local or peer BPA can result in a session not being able to become established.
          </t>
          <t>
Parameters to this request include:
          </t>
          <dl>
            <dt>Peer transport parameters:</dt>
            <dd>Network and transport parameters necessary to identify the connection.</dd>
          </dl>
          <t>
The result of this request <bcp14>SHALL</bcp14> be a unique session ID used to correlate later interactions with the session.
The peer transport parameters are not a sufficient session identifier because a CLA can request and/or establish multiple sessions with the same peer.
          </t>
        </section>
        <section anchor="sec-srv-session-terminate">
          <name>Terminate Session</name>
          <t>
This request allows the BPA to preemptively terminate a session with a peer.
In the case where a CLA allows a clean termination procedure that will avoid transmission or reception failures, it is better to terminate than to simply stop the CLA.
          </t>
          <t>
Parameters to this request include:
          </t>
          <dl>
            <dt>Session ID:</dt>
            <dd>The correlator for the session.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-session-state-changed">
          <name>Session State Changed</name>
          <t>
The CLA indicates to the BPA when the state of a session changes in a way that would be visible to the BPA.
The available states are specific to the CLA but can include pre-established handshaking states and pre-termination cleanup states.
          </t>
          <t>
Parameters to this indication include:
          </t>
          <dl>
            <dt>Session ID:</dt>
            <dd>The correlator for the session.</dd>
            <dt>Peer transport parameters:</dt>
            <dd>Network and transport parameters necessary to identify the connection.</dd>
            <dt>New state:</dt>
            <dd>The new state associated with the identified session.</dd>
          </dl>
        </section>
        <section anchor="sec-srv-session-list">
          <name>List Sessions</name>
          <t>
This optional request allows a BPA to poll the status of existing connections to peer nodes.
This includes connections in which the local node was the active entity (<em>i.e.</em>, the client) and in which the local node was the passive entity (<em>i.e.</em>, the server).
          </t>
          <t>
The result of this request is list of session summaries, each containing:
          </t>
          <ul spacing="compact">
            <li>Session ID</li>
            <li>Peer parameters</li>
            <li>Session state</li>
          </ul>
        </section>
      </section>
      <section anchor="sec-srv-listen">
        <name>Passive Listening</name>
        <t>
In order to support the Bundle Reception service of <xref target="sec-srv-bundle-rx"/> and/or the Persistent Session service of <xref target="sec-srv-session"/>, a BPA must passively listen for network datagrams or connection attempts in accordance with the CL specifics.
Because of this, all CLAs <bcp14>SHALL</bcp14> support the Passive Listening service.
        </t>
        <aside><t>
Just because this is mandatory to implement, does not mean that any particular instances of the CLA need to use this service.
In the case of a connection-oriented CLA (<em>i.e.</em>, implementing the TCPCL) on one side of a firewall or NAT with restrictive access policies in place, it would not be meaningful to listen because the outside network cannot access that transport.
In that case, the CLA can still transmit and receive bundles via an actively initiated persistent connection.
For other, connectionless CLA (<em>i.e.</em>, implementing the LTPCL) it is always necessary to passively listen in order to perform the session/stream/transfer demultiplexing in the CLA.
        </t></aside>
        <t>
The primitives associated with this service are in the following subsections.
        </t>
        <section anchor="sec-srv-listen-begin">
          <name>Begin Listening</name>
          <t>
This request informs the CLA when it is to begin passive listening on a transport.
Because a single CLA would either not be able to listen concurrently with the same parameters, or not logically gain anything by doing so, there is no concept here of a listening identifier; the transport parameters used to listen <em>are</em> the identifier.
          </t>
          <t>
Parameters to this request include:
          </t>
          <dl>
            <dt>Transport parameters:</dt>
            <dd>Network and transport parameters necessary to enable the BPA to listen for datagrams or connection requests.</dd>
          </dl>
          <t>
The result of this request <bcp14>SHALL</bcp14> be an indication of whether or not the request succeeded.
There are many reasons why a set of parameters will not be able to listened for, including local network address assignments or other processes on the same host using the same transport parameters for listening.
          </t>
        </section>
        <section anchor="sec-srv-listen-end">
          <name>End Listening</name>
          <t>
This request informs the CLA when it is to end passive listening on a transport.
This request <bcp14>SHALL</bcp14> be coupled with an earlier Begin Listening request, as there is no concept of ending listening before beginning.
          </t>
          <t>
Parameters to this request include:
          </t>
          <dl>
            <dt>Transport parameters:</dt>
            <dd>Network and transport parameters identical to a Begin Listening request.</dd>
          </dl>
        </section>
      </section>
    </section>
    <section anchor="sec-security">
      <name>Security Considerations</name>
      <t>
This document does not define any requirements or structures which introduce new security considerations.
All of the security considerations of specific convergence layers following this service model are all still applicable, including activities that are <em>not</em> covered by this model.
      </t>
      <t>
The parameters available as "Security Needs" in <xref format="title" target="sec-srv-bundle-tx-begin"/> or as "Security Metadata" in <xref format="title" target="sec-srv-bundle-rx-success"/> are specific to the combination of the security capabilities of a CL and the security policy configured on a CLA.
      </t>
    </section>
    <section anchor="sec-iana">
      <name>IANA Considerations</name>
      <t>
This document does not affect any IANA registries.
      </t>
    </section>
  </middle>
  <back>
    <references>
      <name>References</name>
      <references>
        <name>Normative References</name>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2119.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8174.xml"/>
      </references>
      <references>
        <name>Informative References</name>
        <reference anchor="CCSDS-BP" target="https://public.ccsds.org/Pubs/734x2b1.pdf">
          <front>
            <title>CCSDS Bundle Protocol Specification</title>
            <seriesInfo name="CCSDS" value="734.2-B-1"/>
            <author>
              <organization>Consultative Committee for Space Data Systems</organization>
            </author>
            <date month="September" year="2015"/>
          </front>
        </reference>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.2675.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5326.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.5740.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7122.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7242.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.7435.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.8900.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9171.xml"/>
        <xi:include href="https://xml2rfc.tools.ietf.org/public/rfc/bibxml/reference.RFC.9174.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.ietf-dtn-bibect.xml"/>
        <xi:include href="https://xml2rfc.ietf.org/public/rfc/bibxml3/reference.I-D.sipos-dtn-udpcl.xml"/>
      </references>
    </references>
    <section anchor="sec-applicability">
      <name>Applicability to Existing Convergence Layers</name>
      <t>
This section explains how existing CLs relate to the idealized service model defined in this document.
In some cases a CL can simply omit optional and non-applicable parts of this model.
In other cases the CL can deviate from this model in meaningful ways, some by specification and some because of lack of specification of such detail in the CL definition.
      </t>
      <section>
        <name>UDPCL</name>
        <t>
There are two different "current" definitions of the UDPCL: one in <xref section="3.2.2" target="RFC7122"/> which is very vague on details of network addressing and port numbers, and another in Appendix B4 of <xref target="CCSDS-BP"/> which is more specific on some details but still ignores the effects of network middleboxes.
        </t>
        <aside><t>
The updates in <xref target="I-D.sipos-dtn-udpcl"/> are intended to address these unspecified behaviors in a way which is compatible with middlebox best practices.
        </t></aside>
        <t>
The UDPCL does not have any notion of a partial transmission or reception so no so will never indicate intermediate Transmission Progress or Reception Progress and has no ability to Interrupt Transmission or Interrupt Reception.
The UDPCL is unreliable so will never indicate Transmission Failure.
The UDPCL will never indicate Reception Started with a total size.
        </t>
        <t>
The peer transport parameters for the UDPCL are a network host name or address and a UDP port number.
        </t>
        <t>
The UDPCL does not have a concept of a persistent session, but implementations are encouraged to re-use source port numbers when transmitting to the same peer in order to be compatible with firewalls and other middleboxes.
        </t>
      </section>
      <section>
        <name>TCPCL</name>
        <t>
Because they both share the same overall logic and workflow, this section applies to both the current TCPCL version 4 <xref target="RFC9174"/> and the earlier version 3 <xref target="RFC7242"/>.
        </t>
        <t>
Although the TCPCL provides a reliable transfer between transmitter CLA and receiver CLA, there is no current requirement that mandates the receiver sending a final <tt>XFER_ACK</tt> only after the BPA has fully processed it (i.e. it will be either delivered, forwarded, or deleted but not silently dropped).
        </t>
        <t>
The TCPCL does not include a <xref format="title" target="sec-srv-bundle-tx-begin"/> deadline or the ability to interrupt a transmission.
There is an assumption in its operation that a single transfer will complete in a short enough time that it will be insignificant compared to a bundle's lifetime.
This is applicable for small bundles with long lifetimes, but can cause logical issues for large bundles and short lifetimes (relative to the network throughput).
        </t>
        <t>
The TCPCL will only indicate <xref format="title" target="sec-srv-bundle-rx-started"/> with a total size if the sender of the bundle provided a size in an optional mechanism.
For TCPCLv3 this is a separate pre-transfer message and for TCPCLv4 this is a transfer extension item.
        </t>
        <t>
The peer transport parameters for the TCPCL are a network host name or address and a TCP port number.
A CLA <bcp14>SHOULD NOT</bcp14> make correlation assumptions between sessions to the same network host name or address.
Only a session-reported Node ID <bcp14>MAY</bcp14> be used by a to correlate between TCPCL sessions.
        </t>
        <t>
The TCPCL has a concept of a persistent session which agrees with the service model of <xref target="sec-srv-session"/>.
While the TCPCL definition is more focused on the mechanics of session keeping and transfers as distinct activities, this document treats session keeping as a subordinate activity to transmissions (<em>i.e.</em>, a CLA is free to transparently reuse a session or establish a new session in support of a transmission request with the same transport parameters).
        </t>
      </section>
      <section>
        <name>LTPCL</name>
        <t>
Current LTP implementations do not universally have the concept of a <xref format="title" target="sec-srv-bundle-tx-begin"/> deadline and the version zero specification in <xref target="RFC5326"/> <xref target="RFC7122"/> do not mention reasons why a client would cancel a transmitting session.
LTP has several types of internal segment-to-segment timers for reliable transport, but outside of an explicit transmission deadline a CLA provides no guarantee to the BPA about the aggregate effect of timer durations, backoff durations, OWLT assumptions or retry counts.
        </t>
        <t>
The peer transport parameters for the LTPCL-over-UDP are a network host name or address and a UDP port number.
In some implementations, the peering logic is based on LTP Engine ID rather than transport parameters but ultimately there must be some mapping down to the transport parameters.
        </t>
        <t>
Although LTP transfers are associated with an "LTP session" this is not a persistent session as defined by <xref target="sec-srv-session"/>; LTP has no persistent sessions.
        </t>
      </section>
      <section>
        <name>BIBE</name>
        <t>
The proposed bundle-in-bundle encapsulation (BIBE) service <xref target="I-D.ietf-dtn-bibect"/> acts as an administrative record type above the Administrative Entity <xref target="RFC9171"/> of a BPA as well as a CLA transport below a BPA.
        </t>
        <t>
The proposed BIBE transport is atomic (any fragmentation of the encapsulating bundle is not considered to be part of the BIBE layer), so the BIBE will never indicate intermediate Transmission Progress or Reception Progress.
Also because of that any Transmission Failure will occur immediately after start (as the encapsulating bundle is assembled) and any Reception Failure will occur immediately after start (as the encapsulating bundle payload is decoded).
        </t>
      </section>
    </section>
    <section anchor="sec-doc-ack" numbered="false">
      <name>Acknowledgments</name>
      <t>
      </t>
    </section>
  </back>
</rfc>
